
<template>
  <view class="container {{noscroll}}" >
    <!-- 轮播 -->
     <swiper  class="swiper" autoplay indicator-dots interval="{{interval}}" duration="{{duration}}">
      <block wx:for="{{detail.img_path}}" wx:key="index">
        <swiper-item v-if="item">
          <image src="{{imgUrl+item}}" show-menu-by-longpress mode="center" lazy-load class="slide-image"/>
        </swiper-item>
      </block>
    </swiper>
    <!-- 描述 -->
    <view class="descipt">
      <text class="name">{{detail.name}}</text>
       <view class="tips des">
        <text class="item" @tap="showDes">简介</text>
        <text class="item" @tap="showStandard">收费标准</text>
      </view>
      <view class="tips">
        <text class="item" wx:for="{{detail.lablesIds.join(',')}}" wx:key="index">{{item}}</text>
      </view>
      <view class="list">
        <view class="item" @tap="toTel">
          <text class="lable">咨询电话：</text><text class="content">{{detail.tel}}</text>
        </view>
        <view class="item">
          <text class="lable">营业时间：</text><text class="content">{{detail.businessHours}}</text>
        </view>
        <view class="item" @tap="toAddress">
          <text class="lable">景区地址：</text><text class="content">{{detail.address}}</text><text class="address-icon">地图</text> 
        </view>
      </view>
    </view>

    <view class="ticket-list">
     <repeat for="{{detail.product}}" key="index">
        <ticketitem :item="item"></ticketitem>
      </repeat>
    </view>
    <actionShowTwo :top.sync="top">
       <view slot="title" class="actionShow-top">
        <view class="content">
          <text class="title">{{actionName}}</text>
        </view>
        <view class="close" @tap="closeActionShowTwo"></view>
      </view>
      <view slot="content">
        <scroll-view scroll-y  style="height:{{heights}}"  class="actionShow-content">
           <view class="list">
              <import src="../wxParse/wxParse.wxml"/>
               <template is="wxParse" data="{{wxParseData:desStandard.nodes}}"></template>
            </view>
        </scroll-view>
      </view>
    </actionShowTwo>

    <actionShow>
      <view slot="title" class="actionShow-top">
        <view class="content">
          <text class="title">{{notece.prouctName}}</text>
        </view>
        <view class="close" @tap="closeAction"></view>
      </view>
      <view slot="content">
        <scroll-view scroll-y  style="height:{{height}}"  class="actionShow-content">
            <view class="list" wx:if="{{notece.scheduleRule}}">
              <text class="title">预定规则</text>
              <import src="../wxParse/wxParse.wxml"/>
               <template is="wxParse" data="{{wxParseData:scheduleRule.nodes}}"></template>
            </view>
           <view class="list" wx:if="{{notece.refundRule}}">
              <text class="title">退改规则</text>
              <import src="../wxParse/wxParse.wxml"/>
              <template is="wxParse" data="{{wxParseData:refundRule.nodes}}"></template>
            </view>
            <view class="list" wx:if="{{notece.containContent}}">
              <text class="title">包含内容</text>
              <import src="../wxParse/wxParse.wxml"/>
              <template is="wxParse" data="{{wxParseData:containContent.nodes}}"></template>
            </view>
            <view class="list" wx:if="{{notece.instructions}}">
              <text class="title">使用说明</text>
              <import src="../wxParse/wxParse.wxml"/>
              <template is="wxParse" data="{{wxParseData:instructions.nodes}}"></template>
            </view>
             <view class="list" wx:if="{{notece.notice}}">
              <text class="title">注意事项</text>
              <import src="../wxParse/wxParse.wxml"/>
              <template is="wxParse" data="{{wxParseData:notice.nodes}}"></template>
            </view>
        </scroll-view>
      </view>
      <view slot="footer" class="action-footer">
        <view class="price">￥{{notece.price}}</view>
        <button plain size="mini" @tap="toBuy({{notece}})">购买</button>
      </view>
    </actionShow>
    <navigator open-type="switchTab" wx:if="{{isShare}}" url="/pages/index" hover-class="none"  class="go-back">首页</navigator>
  </view>

</template>

<script>
  import wepy from 'wepy'
  import Toast from 'wepy-com-toast'
  import testMixin from '../mixins/test'
  import ticketItem from '../components/ticket-item'
  import XHR from '../api/'
  import ActionShow from '../components/actionShow'
  var WxParse = require('../wxParse/wxParse.js')
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '详情',
      usingComponents: {
      }
    }
    components = {
      toast: Toast,
      ticketitem: ticketItem,
      actionShow: ActionShow,
      actionShowTwo: ActionShow
    }

    mixins = [testMixin]

    data = {
      noscroll: '',
      top: '60',
      actionName: '',
      isShare: false,
      menu: ['成人票', '儿童票', '家庭票(2大1小)', '老人票', '学生票', '学生票'],
      detail: [],
      autoplay: false,
      interval: 3000,
      duration: 1000,
      height: 400,
      heights: 100,
      catchtouchmove: false,
      notece: {},
      replaceStr: { // 过滤规则 方便以后添加写了一个对象，新加过滤规则的话 在这里面添加就行
        'alt=.+?(?=\\/>)': ''
      }
    }

    computed = {
    }

    methods = {
      closeAction() {
        this.noscroll = ''
        this.$invoke('actionShow', 'closeAction')
      },
      toTel() {
        wepy.makePhoneCall({
          phoneNumber: this.detail.tel // 仅为示例，并非真实的电话号码
        })
      },
      showDes() {
        this.noscroll = 'no-scroll'
        this.actionName = '简介'
        let desStandard = this.detail.introduce
        this.replaceKeyWord(desStandard, this.replaceStr)
        WxParse.wxParse('desStandard', 'html', desStandard, this, 0)
        this.$invoke('actionShowTwo', 'showAction')
      },
      showStandard() {
        this.noscroll = 'no-scroll'
        this.actionName = '收费标准'
        let desStandard = this.detail.feeStandard
        this.replaceKeyWord(desStandard, this.replaceStr)
        WxParse.wxParse('desStandard', 'html', desStandard, this, 0)
        this.$invoke('actionShowTwo', 'showAction')
      },
      closeActionShowTwo() {
        this.noscroll = ''
        this.$invoke('actionShowTwo', 'closeAction')
      },
      toAddress() {
        wx.openLocation({
          latitude: Number(this.detail.accuracy),
          longitude: Number(this.detail.latitude),
          scale: 16
        })
      }
    }
  
    onShareAppMessage(res) {
      if (res.from === 'button') {
      }
      return {
        title: this.detail.name,
        imageUrl: this.imgUrl + this.detail.img_path[0],
        path: `pages/detail?id=${this.detail.id}&share=1`
      }
    }
    events = {
      'showRule': (p1, $event) => {
        if (p1.scheduleRule) {
          this.notece = p1
          let scheduleRule = p1.scheduleRule
          let refundRule = p1.refundRule
          let containContent = p1.containContent
          let instructions = p1.instructions
          let notice = p1.notice
          this.replaceKeyWord(scheduleRule, this.replaceStr)
          this.replaceKeyWord(refundRule, this.replaceStr)
          this.replaceKeyWord(containContent, this.replaceStr)
          this.replaceKeyWord(instructions, this.replaceStr)
          this.replaceKeyWord(notice, this.replaceStr)
          WxParse.wxParse('scheduleRule', 'html', scheduleRule, this, 0)
          WxParse.wxParse('refundRule', 'html', refundRule, this, 0)
          WxParse.wxParse('containContent', 'html', containContent, this, 0)
          WxParse.wxParse('instructions', 'html', instructions, this, 0)
          WxParse.wxParse('notice', 'html', notice, this, 0)
          this.catchtouchmove = !this.catchtouchmove
        }
        this.$apply()
      }
    }
    getDetail (poiId) {
      let json = {
        poiId
      }
      XHR.getDetail(json).then(res => {
        if (res.statusCode === 200) {
          let {result, data, msg} = res.data
          if (!result) {
            this.detail = data
            this.$apply()
          } else {
            wx.showToast({
              title: `${msg}`,
              icon: 'none',
              duration: 2000
            })
          }
        }
      })
    }
    userDistribution(distId) {
      try {
        let openId = wepy.getStorageSync('openId')
        let json = {
          openId,
          distId
        }
        XHR.userDistribution(json).then(res => {
          console.log(res.data)
        })
      } catch (error) {}
    }
    onLoad(option) {
      this.height = wepy.getSystemInfoSync().windowHeight * 0.8 - 110 + 'px'
      this.heights = wepy.getSystemInfoSync().windowHeight * 0.4 - 60 + 'px'
      if (option.distId) {
        wepy.setStorageSync('distId', option.distId)
        this.userDistribution(option.distId)
      }
      if (option.scene) {
        this.isShare = true
        let scene = decodeURIComponent(option.scene)
        scene = scene.split('&')
        this.getDetail(scene[0])
        wepy.setStorageSync('distId', scene[1])
        this.userDistribution(scene[1])
      } else {
        this.getDetail(option.id)
      }
      if (option.share) {
        this.isShare = true
      }
    }
  }
</script>
<style lang="less" scoped>
@import "../wxParse/wxParse.wxss";
.container{
  height: 100%;
  &.no-scroll{
     overflow: hidden;
  }
}
.swiper{
  width: 100%;
  height: 200px;
  image{
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}
.descipt{
  padding: 0 32rpx;
  font-size: 28rpx;
  color: #333;
  .name{
    font-size: 36rpx;
    line-height: 100rpx;
  }
  .tips {
    padding: 0;
    .item{
      padding: 8rpx 16rpx;
      background: #e9e9e9;
      border-radius: 8rpx;
      margin-right: 8rpx;
      display: inline-block;
    }
    &.des{
      .item{
        &::after{
          font-family: 'tour';
          content:'\e769';
          margin-left: 3px;
          display: inline-block;
          transform: scale(0.8);
        }
      }
    }
  }
  .list{
    .item{
      position: relative;
      display: flex;
       padding: 10px 0;
      align-items: center;
      overflow: hidden;
      word-break: break-all;
      &::after{
        content:'';
        position: absolute;
        left: 0;
        bottom: 0;
        right: -32rpx;
        height: 1px;
        border-bottom: 1px solid #D9D9D9;
        color: #D9D9D9;
        -webkit-transform-origin: 0 100%;
        transform-origin: 0 100%;
        -webkit-transform: scaleY(0.5);
        transform: scaleY(0.5);
      }
      .lable{
        margin-right: 20rpx;
      }
      .content{
        flex: 1;
      }
      .address-icon{
        &::after{
          font-family: 'tour';
          content:'\e769';
          font-size: 24rpx;
          margin-left: 2px;
        }
      }
    }
  }
}

.scroll-menu{
  width: 100%;
  white-space: nowrap;
  border-top: 20rpx solid #f5f5f5; 
  .item{
    padding:0 32rpx;
    height: 88rpx;
    line-height: 88rpx;
    font-size: 32rpx;
    display:  inline-block;
    flex-direction: column;
    justify-content: center;
    position: relative;
  }
  .select{
    color: #fc0000;
    &::after{
      content: '';
      height: 3px;
      width: 60%;
      background: #fc0000;
      position: absolute;
      bottom: 0;
      left: 50%;
      margin-left: -30%;
    }
  }
}

.ticket-list{
 border-top: 20rpx solid #f5f5f5;
}

.actionShow-top{
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 32rpx;
  height: 60px;
  box-sizing: border-box;
  position: relative;
  &::after{
    content:'';
    position: absolute;
    left:0;
    bottom: 0;
    right: 0;
    height: 1px;
    border-bottom: 1px solid #D9D9D9;
    color: #D9D9D9;
    -webkit-transform-origin: 0 100%;
    transform-origin: 0 100%;
    -webkit-transform: scaleY(0.5);
    transform: scaleY(0.5);
  }
  .content{
    display: flex;
    justify-content: space-between;
    flex-direction: column;
    color: #666;
    .title{
      font-size: 40rpx;
      font-weight: bold;
      color: #333;
      margin-bottom: 10rpx;
    }
  }
  .close{
    width: 60rpx;
    height: 60rpx;
    text-align: center;
    line-height: 60rpx;
    &::after{
      font-family: 'tour';
      content:'\e608';
      font-size: 40rpx;
    }
  }
}
.actionShow-content{
   font-size: 28rpx;
  .list{
    position: relative;
    padding: 0 32rpx 20rpx 32rpx;
    box-sizing: border-box;
    &::after{
      content:'';
      position: absolute;
      left:0;
      bottom: 0;
      right: 0;
      height: 1px;
      border-bottom: 1px solid #D9D9D9;
      color: #D9D9D9;
      -webkit-transform-origin: 0 100%;
      transform-origin: 0 100%;
      -webkit-transform: scaleY(0.5);
      transform: scaleY(0.5);
    }
    .title{
      font-size: 36rpx;
      font-weight: bold;
      color: #333;
      line-height: 100rpx;
    }
  }
}
.action-footer{
  height: 50px;
  display: flex;
  justify-content:space-between;
  align-items: center;
  border-top: 1px solid #f5f5f5;
  padding: 0 32rpx;
  .price{
    font-size: 40rpx;
    color: #f1550f;
  }
  button{
    background: #ffe143;
    color: #333;
    font-size: 28rpx;
    text-align: center;
    border:none;
  }
}
</style>
